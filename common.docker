WORKDIR /usr/src

ARG GIT_VERSION=2.22.0
ARG CMAKE_VERSION=3.17.1

# Image build scripts
COPY \
  imagefiles/build-and-install-cmake.sh \
  imagefiles/build-and-install-curl.sh \
  imagefiles/build-and-install-git.sh \
  imagefiles/build-and-install-ninja.sh \
  imagefiles/build-and-install-openssl.sh \
  imagefiles/build-and-install-openssh.sh \
  imagefiles/install-cmake-binary.sh \
  imagefiles/install-liquidprompt-binary.sh \
  imagefiles/install-python-packages.sh \
  imagefiles/utils.sh \
  /buildscripts/

RUN \
  X86_FLAG=$([ "$DEFAULT_DOCKCROSS_IMAGE" = "dockcross/manylinux1-x86" -o "$DEFAULT_DOCKCROSS_IMAGE" = "dockcross/manylinux2010-x86" -o "$DEFAULT_DOCKCROSS_IMAGE" = "dockcross/manylinux2014-x86" ] && echo "-32" || echo "") && \
  /buildscripts/build-and-install-openssl.sh $X86_FLAG && \
  /buildscripts/build-and-install-openssh.sh && \
  /buildscripts/build-and-install-curl.sh && \
  /buildscripts/build-and-install-git.sh && \
  /buildscripts/install-cmake-binary.sh $X86_FLAG && \
  /buildscripts/install-liquidprompt-binary.sh && \
  PYTHON=$([ -e /opt/python/cp35-cp35m/bin/python ] && echo "/opt/python/cp35-cp35m/bin/python" || echo "python") && \
  /buildscripts/install-python-packages.sh -python ${PYTHON} && \
  /buildscripts/build-and-install-ninja.sh -python ${PYTHON} && \
  rm -rf /buildscripts

RUN echo "root:root" | chpasswd
WORKDIR /work
ENTRYPOINT ["/dockcross/entrypoint.sh"]

# Runtime scripts
COPY imagefiles/cmake.sh /usr/local/bin/cmake
COPY imagefiles/ccmake.sh /usr/local/bin/ccmake

# Install all dependencies from APT-GET
RUN apt-get install -y git
RUN apt-get install -y libc-dev
RUN apt-get install -y autoconf
RUN apt-get install -y clang-6.0
RUN apt-get install -y llvm
RUN apt-get install -y python3
RUN apt-get install -y python3-pip
RUN apt-get install -y gcovr lcov
RUN apt-get install -y unzip

# Install all dependencies from pip
RUN pip3 install --upgrade pip
RUN pip3 install peru

# Create references directory
RUN apt-get install -y wget
RUN mkdir -p /refs

# Download Higgs-Boson for internal Docker-Builds
RUN mkdir -p /home/higgs-boson/higgs-boson
RUN wget https://github.com/bitboson/higgs-boson/releases/download/v0.0.0-bootstrap/higgs-boson.default.hbsn -P /home/higgs-boson
RUN unzip /home/higgs-boson/higgs-boson.default.hbsn -d /home/higgs-boson/
ENV LD_LIBRARY_PATH="/home/higgs-boson/higgs-boson/default/deps:/home/higgs-boson/higgs-boson/default/lib:${LD_LIBRARY_PATH}"
ENV PATH="/home/higgs-boson/higgs-boson/default/bin:${PATH}"

# Check-out the latest Higgs-Boson project and build it using the bootstrap one
RUN mkdir -p /home/higgs-boson/higgs-boson-latest/
RUN git clone https://github.com/bitboson/higgs-boson.git /home/higgs-boson/higgs-boson-latest/
RUN cd /home/higgs-boson/higgs-boson-latest/ && higgs-boson download internal
RUN cd /home/higgs-boson/higgs-boson-latest/ && higgs-boson build-deps internal default
RUN cd /home/higgs-boson/higgs-boson-latest/ && higgs-boson build internal default
RUN rm -rf /home/higgs-boson/higgs-boson/default/deps && cp -r /home/higgs-boson/higgs-boson-latest/output/default/deps/ /home/higgs-boson/higgs-boson/default/deps
RUN rm -rf /home/higgs-boson/higgs-boson/default/lib && cp -r /home/higgs-boson/higgs-boson-latest/output/default/lib/ /home/higgs-boson/higgs-boson/default/lib
RUN rm -rf /home/higgs-boson/higgs-boson/default/bin && cp -r /home/higgs-boson/higgs-boson-latest/output/default/bin/ /home/higgs-boson/higgs-boson/default/bin
